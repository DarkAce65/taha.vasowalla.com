@use 'sass:math';

@use '../partials/colors';
@use '../partials/uikit-overrides/variables';

$timeline-gap: 24px;
$timeline-width: 2px;
$timeline-event-size: 3px;
$timeline-no-content-height: $timeline-gap + $timeline-width;

$timeline-background: colors.$muted;
$timeline-color: colors.$gray;
$timeline-school-color: colors.$red;
$timeline-work-color: colors.$purple;
$timeline-volunteering-color: colors.$teal;

.grid-2col {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: variables.$global-margin;
}

#timeline {
  z-index: 1;
}

.padding-bottom {
  padding-bottom: variables.$global-margin;
}

.spacer {
  min-height: variables.$global-margin;
}

.empty {
  position: relative;
  height: 100%;
  padding-left: $timeline-gap;
  border-left: $timeline-width solid transparent;
}

.connector {
  @extend .empty;
  border-left-color: $timeline-color;

  &[data-reminder]::after {
    content: attr(data-reminder);
    position: absolute;
    left: 0;
    top: 50%;
    color: $timeline-color;
    font-size: 0.8em;
    transform: translate(-50%, -100%) rotate(-90deg);
    transform-origin: bottom;
  }

  &[data-category='school'] {
    border-left-color: $timeline-school-color;

    &::after {
      color: $timeline-school-color;
    }
  }

  &[data-category='work'] {
    border-left-color: $timeline-work-color;

    &::after {
      color: $timeline-work-color;
    }
  }

  &[data-category='volunteering'],
  &[data-category='club'] {
    border-left-color: $timeline-volunteering-color;

    &::after {
      color: $timeline-volunteering-color;
    }
  }

  &.base-override {
    border-left-color: $timeline-color;

    &::after {
      color: $timeline-color;
    }
  }

  &.school-override {
    border-left-color: $timeline-school-color;

    &::after {
      color: $timeline-school-color;
    }
  }

  &.work-override {
    border-left-color: $timeline-work-color;

    &::after {
      color: $timeline-work-color;
    }
  }

  &.volunteering-override,
  &.club-override {
    border-left-color: $timeline-volunteering-color;

    &::after {
      color: $timeline-volunteering-color;
    }
  }
}

.trail {
  @extend .connector;
  min-height: $timeline-no-content-height;
  border-left-style: dashed;
}

.event {
  @extend .connector;

  &::before {
    content: '';
    position: absolute;
    top: 0.5em;
    left: -$timeline-width * 0.5 - $timeline-event-size;
    width: $timeline-event-size * 4;
    height: $timeline-event-size;
    background: colors.$white;
    border-top: $timeline-event-size solid $timeline-background;
    border-bottom: $timeline-event-size solid $timeline-background;
  }

  .event-date {
    font-size: variables.$text-small-font-size;
    line-height: variables.$text-small-line-height;

    &::after {
      margin-left: variables.$global-margin * 0.5;
      padding-left: variables.$global-margin * 0.5;
      border-left: 1px solid variables.$global-color;
    }

    .event-duration {
      white-space: nowrap;
    }
  }

  &[data-category='school'] {
    & .event-date::after {
      content: 'school';
      color: $timeline-school-color;
    }
  }

  &[data-category='work'] {
    & .event-date::after {
      content: 'work';
      color: $timeline-work-color;
    }
  }

  &[data-category='volunteering'],
  &[data-category='club'] {
    & .event-date::after {
      content: 'volunteering';
      color: $timeline-volunteering-color;
    }
  }

  &[data-category='club'] {
    & .event-date::after {
      content: 'club';
    }
  }
}

.branch {
  position: relative;
  z-index: -1;
  height: $timeline-no-content-height;
  margin-left: -$timeline-no-content-height;
  padding-left: $timeline-no-content-height;
  color: $timeline-color;

  &[data-category='school'] {
    color: $timeline-school-color;
  }

  &[data-category='work'] {
    color: $timeline-work-color;
  }

  &[data-category='volunteering'],
  &[data-category='club'] {
    color: $timeline-volunteering-color;
  }

  &::before {
    content: '';
    z-index: 1;
    position: absolute;
    left: 0;
    background: currentColor;
    width: math.max(1px, math.div($timeline-width, math.sqrt(2)));
    height: $timeline-no-content-height * math.sqrt(2) + $timeline-width * 0.5;
  }

  &.split::before {
    bottom: 0;
    transform: rotate(45deg);
    transform-origin: bottom;
  }

  &.join::before {
    top: 0;
    transform: rotate(-45deg);
    transform-origin: top;
  }

  &.deep {
    &::before {
      height: $timeline-no-content-height * math.sqrt(5) + $timeline-width * 0.5;
    }

    &.split::before {
      transform: rotate(63.435deg);
    }

    &.join::before {
      transform: rotate(-63.435deg);
    }
  }
}
