{
	"name": "ENGW 1111",
	"title": "First Year Writing<br><small>ENGW 1111</small>",
	"content": "<p></p>",
	"children": [
		{
			"name": "P1: The Writing We Do",
			"title": "The Writing We Do<br><small>Project 1</small>",
			"content": "<p>We read and write a surprising amount throughout our daily lives, often without even noticing. This project was an attempt to recognize and log instances of reading and writing as well as to reflect on any patterns or surprising trends that appeared.</p>",
			"children": [
				{"name": "Programming"},
				{"name": "Reading"}
			]
		},
		{
			"name": "P2: Community Profile",
			"title": "Community Profile<br><small>Project 2</small>",
			"content": "<p>Different communities can be found everywhere and are greatly varied in every aspect. This project identified and described a community with a specific interest, in my case, it was the community of deception-based board game players. I collected information by interviewing players and drawing on my own knowledge of the games.</p>",
			"children": [
				{
					"name": "Computer Scientists",
					"content": "<p>Initially, I thought about showcasing the computer science community. I was planning on defining some key characteristics of the different fields that people go into in CS.</p>",
					"children": [
						{
							"name": "Databases",
							"content": "<p>People who work with data structures and databases of any kind. Whether it be lists, arrays, binary trees, dictionaries, or graphs, Database Engineers need to know them all and utilize them in the correct situations. As for the configuration of the database, they would need to know either SQL or a noSQL schema.</p>"
						},
						{
							"name": "Programming",
							"content": "<p>Programming is a core area of computer science and there is a wide range of subfields underneath it.</p>",
							"children": [
								{
									"name": "Low-level",
									"content": "<p>Low-level programming deals with instructions that are sent directly to the computer.</p><pre>section    .text\n    global _start   ;must be declared for linker (ld)\n_start:                ;tells linker entry point\n    mov    edx,len     ;message length\n    mov    ecx,msg     ;message to write\n    mov    ebx,1       ;file descriptor (stdout)\n    mov    eax,4       ;system call number (sys_write)\n    int    0x80        ;call kernel\n\n    mov    eax,1       ;system call number (sys_exit)\n    int    0x80        ;call kernel\n\nsection    .data\nmsg db 'Hello, world!', 0xa  ;string to be printed\nlen equ $ - msg     ;length of the string</pre><p>The code above will print out \"Hello, world!\"</p>"
								},
								{
									"name": "High-level",
									"content": "High-level programming deals with programming algorithms and handling data. Code written in a high-level langauge is much more human readable than that of a low-level language and is often where people start learning to program. A common field in high-level programming is web development because, for the most part, websites don't have to access the core parts of a computer in order to serve their purpose."
								}
							]
						}
					]
				},
				{
					"name": "Board Game Players",
					"children": [
						{
							"name": "Strategy",
							"content": "Risk, Settlers of Catan"
						},
						{
							"name": "Deception",
							"content": "Coup, Avalon",
							"children": [
								{"name": "Types of players"}
							]
						},
						{
							"name": "Interaction",
							"content": "Hex Hex, Avalon"
						}
					]
				}
			]
		},
		{
			"name": "P3: Globe-style Article",
			"title": "Globe-style Article<br><small>Project 3</small>",
			"content": "<p>This essay was to be written in the style of a Globe magazine article to expose discussion on an argument. The topic I chose was on artificial intelligence and its applications in the real world. The article bounces around between multiple different topics like philosophy and computer science from many different sources and references.</p>",
			"children": [
				{
					"name": "Self-driving Cars",
					"children": [
						{
							"name": "Machine Learning",
							"content": "Neural networks, self-driving cars, machine vision",
							"children": [
								{
									"name": "Neuroscience",
									"content": "<i>The Tale of The Dueling Neurosurgeons</i> by Sam Kean, <a href='https://ncase.itch.io/wbwwb' target='_blank'>We Become What We Behold</a>, <a href='http://ncase.me/neurons/' target='_blank'>Neurotic Neurons</a>"
								}
							]
						},
						{
							"name": "Artificial Intelligence",
							"content": "self-aware, Skynet, The Matrix"
						},
						{
							"name": "Philosophy",
							"content": "Trolley problem"
						}
					]
				}
			]
		},
		{
			"name": "Me",
			"content": "<p>Being the cynical logician that I am, editing essays is much easier than generating content for them. In this way, I usually ended up with very short, direct essays. However, I never fully enjoyed writing in an English class before college. When I had topics I actually cared to write about, I was able to elaborate more than I normally did.</p>",
			"children": [
				{
					"name": "Strengths/Weaknesses",
					"content": "<p>When writing about topics I actually cared to write about, I was able to elaborate more than I normally did. I still kept to my habit of creating a multilevel, list outline before each essay I wrote (as you can no doubt see by this tree) and I feel now that I can better expand on each point I thought of. I think my strengths and weaknesses are mostly the same as before, but I feel like I know that I have the potential to write more completely when I'm vested in the topic.</p>"
				},
				{
					"name": "Procrastination",
					"content": "<p>Procrastinating on essays was something I always did before (and still do in fact), but for essays I have an interest in, I don't leave everything until the night before anymore because I know that there's so much I want to get on the paper. Having things to write about was a new feeling for me as I hadn't ever had the chance to write essays about topics I wanted</p>"
				},
				{
					"name": "Digication",
					"content": "<p>Having a platform like Digication to post works on helped me in some ways to set a specific tone of voice for a defined audience (as well themes to mess around with), but the web developer in me made it near impossible not to criticize the way the website was built. I was already used to creating content suitable for the web so structuring my content wasn't too difficult, but it was occasionally distracting to see some style on the page that didn't fit with the rest of the site and to edit the code to hide its effects.</p><p>I spend a lot of time tweaking the way my own website looks so I know how much effort it takes to create something that people will enjoy looking at. However, with Digication they appear to provide support for changing styles on your portfolio, but it's not truly available. In web development, styles are added to pages via files written in CSS. Digication does allow you to add in your own CSS stylesheet, but it doesn't evaluate what you type in correctly. It does not recognize any of the symbols which make CSS truly effective and locks out some basic styles such as fonts.</p>"
				},
				{
					"name": "Future Plans",
					"content": "<p>I'm definitely looking forward to developing my knowledge about neural networks and possibly more about how machine learning interacts with audio. After all the research I did for the essays in this course, I am even more certain that I want to know more. An idea I found an interest in stemmed from the fact that I'm always looking for music that both sounds good and has sheet music available. Unfortunately, good sheet music is often difficult to find or costs money to get access to. If a natural language processor was retrained with musical instruments instead of voices and could identify the notes being played, it might be able to generate sheet music for each part on its own which be extremely useful.</p>"
				}
			]
		}
	]
}